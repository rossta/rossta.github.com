{"version":3,"file":"js/app.c7b055f2ae14d0632521.js","mappings":"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","sources":["webpack://rossta.net/./source/assets/javascripts/utils/toggle-class.js","webpack://rossta.net/./source/assets/javascripts/top-bar-menu.js","webpack://rossta.net/./source/assets/javascripts/utils/observe-added-node.js","webpack://rossta.net/./source/assets/javascripts/formkit.js","webpack://rossta.net/./source/assets/javascripts/app.js","webpack://rossta.net/./node_modules/debug/src/browser.js","webpack://rossta.net/./node_modules/debug/src/common.js","webpack://rossta.net/./node_modules/ms/index.js"],"sourcesContent":["export default function (el, className) {\n  if (el.classList.contains(className)) {\n    el.classList.remove(className)\n  } else {\n    el.classList.add(className)\n  }\n}\n","import debug from 'debug'\n\nimport toggleClass from './utils/toggle-class'\n\nconst log = debug('app:top-bar-menu')\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  document.querySelectorAll('.top-bar-menu-button').forEach((el) => {\n    el.addEventListener('click', (event) => {\n      event.stopPropagation()\n      toggleClass(\n        document.querySelector('.top-bar-section'),\n        'hidden',\n      )\n      el.querySelectorAll('.icon').forEach((ic) =>\n        toggleClass(ic, 'hidden'),\n      )\n    })\n  })\n})\n","import debug from 'debug'\n\nconst log = debug('app:utils/observe-added-node')\n\n// Options for the observer (which mutations to observe)\n// Callback function to execute when mutations are observed\nexport default function observe(classSelector, callback) {\n  // Create an observer instance linked to the callback function\n  const observer = new MutationObserver(function onAddedNode(\n    mutationsList,\n    observer,\n  ) {\n    mutationsList.forEach((mutation) => {\n      if (mutation.type === 'childList') {\n        mutation.addedNodes.forEach((node) => {\n          if (\n            node.classList &&\n            node.classList.contains(classSelector)\n          ) {\n            log('added node detected', node)\n            callback(node)\n\n            observer.disconnect()\n          }\n        })\n      }\n    })\n  })\n\n  // Start observing the target node for configured mutations\n  observer.observe(document.querySelector('body'), {\n    childList: true,\n  })\n}\n","import debug from 'debug'\n\nimport observeAddedNode from './utils/observe-added-node'\n\nconst log = debug('app:formkit')\n\nobserveAddedNode('formkit-slide-in', (node) => {\n  const input = node.querySelector(\"input[name='email_address']\")\n  input.type = 'email'\n  log('input', input, 'parent node', node)\n})\n","import debug from 'debug'\n\nimport '../stylesheets/app.css'\nimport './top-bar-menu'\nimport './formkit'\n\nconst log = debug('app:app')\n\nimport(/* webpackChunkName: \"highlight\" */ 'syntax-highlight').then(\n  ({ default: highlight }) => highlight.highlightAll(),\n)\n\nif (__DEVELOPMENT__) {\n  log('Running in development mode!')\n}\n\nif (__BUILD__) {\n  log('Welcome to rossta.net!')\n}\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n"],"names":["el","className","classList","contains","remove","add","debug","window","addEventListener","document","querySelectorAll","forEach","event","stopPropagation","toggleClass","querySelector","ic","callback","log","node","input","type","MutationObserver","mutationsList","observer","mutation","addedNodes","disconnect","observe","childList","then","highlightAll","exports","formatArgs","args","this","useColors","namespace","module","humanize","diff","c","color","splice","index","lastC","replace","match","save","namespaces","storage","setItem","removeItem","error","load","r","getItem","process","env","DEBUG","__nwjs","navigator","userAgent","toLowerCase","documentElement","style","WebkitAppearance","console","firebug","exception","table","parseInt","RegExp","$1","localStorage","localstorage","destroy","warned","warn","colors","formatters","j","v","JSON","stringify","message","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","enabled","self","curr","Number","Date","ms","prev","coerce","unshift","format","formatter","val","call","apply","selectColor","extend","Object","defineProperty","enumerable","configurable","get","set","init","delimiter","newDebug","toNamespace","regexp","toString","substring","length","default","Error","stack","disable","names","map","skips","join","enable","i","split","len","push","slice","name","test","keys","key","hash","charCodeAt","Math","abs","s","m","h","d","plural","msAbs","n","isPlural","round","options","str","String","exec","parseFloat","parse","isFinite","long","fmtShort"],"sourceRoot":""}